{{- if .Values.crds.create -}}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: gcpmanagedmachinepools.infrastructure.cluster.x-k8s.io
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    clusterctl.cluster.x-k8s.io: ""
    cluster.x-k8s.io/provider: infrastructure-gcp
    cluster.x-k8s.io/v1beta1: v1beta1
  {{- include "cluster-api-provider-gcp.labels" . | nindent 4 }}
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: GCPManagedMachinePool
    listKind: GCPManagedMachinePoolList
    plural: gcpmanagedmachinepools
    shortNames:
    - gcpmmp
    singular: gcpmanagedmachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mode
      name: Mode
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: GCPManagedMachinePool is the Schema for the gcpmanagedmachinepools API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GCPManagedMachinePoolSpec defines the desired state of GCPManagedMachinePool.
            properties:
              additionalLabels:
                additionalProperties:
                  type: string
                description: AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider, in addition to the ones added by default.
                type: object
              diskSizeGb:
                description: "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. \n If unspecified, the default disk size is 100GB."
                format: int32
                type: integer
              diskType:
                description: "Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') \n If unspecified, the default disk type is 'pd-standard'"
                type: string
              imageType:
                description: ImageType is the image type to use for this node. Note that for a given image type, the latest version of it will be used. Please see https://cloud.google.com/kubernetes-engine/docs/concepts/node-images for available image types.
                type: string
              kubernetesLabels:
                additionalProperties:
                  type: string
                description: KubernetesLabels specifies the labels to apply to the nodes of the node pool.
                type: object
              kubernetesTaints:
                description: KubernetesTaints specifies the taints to apply to the nodes of the node pool.
                items:
                  description: Taint represents a Kubernetes taint.
                  properties:
                    effect:
                      description: Effect specifies the effect for the taint.
                      enum:
                      - NoSchedule
                      - NoExecute
                      - PreferNoSchedule
                      type: string
                    key:
                      description: Key is the key of the taint
                      type: string
                    value:
                      description: Value is the value of the taint
                      type: string
                  required:
                  - effect
                  - key
                  - value
                  type: object
                type: array
              machineType:
                description: "The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types) \n If unspecified, the default machine type is `e2-medium`."
                type: string
              management:
                description: Management configuration for this NodePool.
                properties:
                  autoRepair:
                    description: AutoRepair is a flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.
                    type: boolean
                  autoUpgrade:
                    description: AutoUpgrade is a flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.
                    type: boolean
                type: object
              nodePoolName:
                description: NodePoolName specifies the name of the GKE node pool corresponding to this MachinePool. If you don't specify a name then a default name will be created based on the namespace and name of the managed machine pool.
                type: string
              preemptible:
                description: 'Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more information about preemptible VM instances.'
                type: boolean
              providerIDList:
                description: ProviderIDList are the provider IDs of instances in the managed instance group corresponding to the nodegroup represented by this machine pool
                items:
                  type: string
                type: array
              scaling:
                description: Scaling specifies scaling for the node pool
                properties:
                  maxCount:
                    description: MaxCount is a maximum number of nodes for one location in the NodePool. Must be >= maxCount. There has to be enough quota to scale up the cluster.
                    format: int32
                    type: integer
                  minCount:
                    description: MinCount is a minimum number of nodes for one location in the NodePool. Must be >= 1 and <= maxCount.
                    format: int32
                    type: integer
                type: object
              spot:
                description: Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
                type: boolean
            type: object
          status:
            description: GCPManagedMachinePoolStatus defines the observed state of GCPManagedMachinePool.
            properties:
              conditions:
                description: Conditions specifies the cpnditions for the managed machine pool
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
{{- end -}}