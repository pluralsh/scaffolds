
global:
  deploymentMode: oss
  edition: community

  airbyteUrl: {{ configuration.hostname }}

  storage:
    storageSecretName: airbyte-airbyte-secrets
    {% if configuration.cloud == 'aws' %}
    type: S3
    s3:
      region: {{ configuration.region }}
      authenticationType: credentials
      accessKeyId: {{ imports[configuration.stackName].access_key_id }}
      accessKeyIdSecretKey: AWS_ACCESS_KEY_ID
      secretAccessKey: {{ imports[configuration.stackName].secret_access_key }}
      secretAccessKeySecretKey: AWS_SECRET_ACCESS_KEY
    {% elsif configuration.cloud == 'azure' %}
    type: azure
    azure:
      connectionString: {{ imports[configuration.stackName].connection_string }}
    {% elsif configuration.cloud == 'gcp' %}
    type: gcs
    gcs:
      projectId: {{ imports[configuration.stackName].project_id }}
      credentialsJson: {{ imports[configuration.stackName].credentials_json }}
    {% endif %}
    bucket:
      log: {{ configuration.bucket }}
      state: {{ configuration.bucket }}
      workloadOutput: {{ configuration.bucket }}

  database:
    type: external
    database: airbyte
    host: {{ imports[configuration.stackName].postgres_host }}
    port: "5432"
    secretName: airbyte-airbyte-secrets
    user: airbyte
    userSecretKey: DATABASE_USER
    password: {{ imports[configuration.stackName].postgres_password }}
    passwordSecretKey: DATABASE_PASSWORD

postgresql:
  enabled: false

externalDatabase:
  database: airbyte
  host: {{ imports[configuration.stackName].postgres_host }}
  user: airbyte
  existingSecret: ~
  password: {{ imports[configuration.stackName].postgres_password }}
  port: 5432

webapp:
  ingress:
    enabled: false
  podAnnotations:
    security.plural.sh/oauth-env-secret: airbyte-proxy-config
    {% if configuration["basicAuth"] %}
    security.plural.sh/htpasswd-secret: httpaswd-users
    {% endif %}
  podLabels:
    security.plural.sh/inject-oauth-sidecar: "true"

