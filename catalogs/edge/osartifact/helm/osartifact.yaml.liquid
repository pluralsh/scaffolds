{% raw %}

{% assign defaultRepositoryName = 'pluralos-' | append: configuration.name %}

# Kubernetes node name
nodeName: {{ configuration.name }}

# Base image used for building customized plural ISO
image: {{ configuration.image }}

# Target device. Currently supported values: rpi4
device: {{ configuration.device }}

# Username that will be used to access the device over SSH
username: {{ configuration.username }}

# Secret that holds password for the default user that will be used to access the device over SSH
passwordSecret:
  name: plural-edge-{{ configuration.name }}-ssh

# Console URL that will be used by the device to join the fleet, i.e. console.plrl-xyz.onplural.sh
url: {{ configuration.console_dns }}

tokenSecret:
  # Name of the secret that holds the bootstrap token
  name: plural-edge-{{ configuration.name }}-bootstrap-token

# Export configuration for the final ISO images
exporter:
  # Whether container registry is an ECR instance or other. One of: "ecr", "other"
  cloud: {% if configuration.isECRRegistry == 'true' %}ecr{% else %}other{% endif %}
  # Docker registry DNS name where we should export packed ISO images
  registry: {{ configuration.registry | default: configuration.hostname }}
  # Name of the repository where images should be stored
  repository: {{ configuration.repository | default: defaultRepositoryName }}
  # Image tag that should be used when pushing to the registry
  tag: {{ configuration.tag | default: "latest" }}
  # Username used when generating docker config.json. It is only used when 'passwordSecret' is provided.
  username: plural
  # Secret that stores just the password for the docker registry user.
  # One of 'passwordSecret' or 'configSecret' must be provided when cloud is set to 'other'.
  {% unless configuration.registry %}
  passwordSecret:
    name: osbuilder-registry-basic-auth
  {% endif %}
  # Secret configuration that stores the docker config.json file with the auth information.
  # It is in the default docker format.
  {% if configuration.registryAuthSecret %}
  configSecret:
    name: {{ configuration.registryAuthSecret }}
    key: config.json
  {% endif %}
{% endraw %}